<style type="less">
@import '../../style/base/mixin/text.less';
.order {
    .weui-cells__title {
        color: #262626;
        font-size: 24rpx;
    }
    .weui-label {
        color: #262626;
        font-size: 28rpx;
        font-weight: bold;
        width: 260rpx;
    }
    .weui-cell__bd {
        color: #262626;
        font-size: 28rpx;
    }
    .flex-bd {
        .hLayout(row, right, center);
    }
    .weui-special {
        .weui-select {
            border-right: 0px;
        }
    }
    .weui-flex {
        margin: 40rpx 0px;
        .hLayout(row, center, center);
        text {
            color:#262626;
            font-size: 24rpx;
        }
    }
    .authenticate-btn1 {
        width: 184rpx;
        height: 58rpx;
        background-color: #C4261D !important;
        border: 1px solid #C4261D !important;
        color: #fff;
        font-size: 24rpx;
    }
}
</style>
<template>
  <view class="order">
    <view class="weui-cells__title">订单信息</view>
    <view class="weui-cells weui-cells_after-title">
        <view class="weui-cell weui-cell_input">
            <view class="weui-cell__hd">
                <view class="weui-label">客户姓名</view>
            </view>
            <view class="weui-cell__bd">
                <input class="weui-input" value="{{customerName}}" placeholder="请输入姓名" @confirm="confirmName" @blur="blurName" @input="inputName"/>
            </view>
        </view>
        <view class="weui-cell weui-cell_input weui-cell_vcode">
            <view class="weui-cell__hd">
                <view class="weui-label">身份证号码</view>
            </view>
            <view class="weui-cell__bd">
                <input class="weui-input" value="{{customerId}}" placeholder="请输入身份证号码" @blur="blurId" @input="inputId"/>
            </view>
        </view>
        <view class="weui-cell weui-cell_input">
            <view class="weui-cell__hd">
                <view class="weui-label">回购日期</view>
            </view>
            <view class="weui-cell__bd flex-bd">
                <picker mode="date" value="{{date}}" start="{{beginDate}}" end="{{endDate}}" @change="bindDateChange" style="flex: 1;">
                    <view class="weui-input">{{date}}</view>
                </picker>
                <picker mode="time" value="{{time}}" start="00:00" end="23:59" @change="bindTimeChange" style="flex: 1;">
                    <view class="weui-input">{{time}}</view>
                </picker>
            </view>
        </view>
        <view class="weui-cell weui-cell_select">
            <view class="weui-cell__hd weui-cell__hd_in-select-after">
                <view class="weui-label">产品类型</view>
            </view>
            <view class="weui-cell__bd">
                <picker @change="bindProductChange" value="{{productIndex}}" range="{{productType}}">
                    <view class="weui-select weui-select_in-select-after">{{productType[productIndex]}}</view>
                </picker>
            </view>
        </view>
        <view class="weui-cell weui-cell_input">
            <view class="weui-cell__hd">
                <view class="weui-label">回购单价</view>
            </view>
            <view class="weui-cell__bd flex-bd">
                <text>￥</text>
                <input class="weui-input" type="digit" value="{{realPerPrice}}" placeholder="请输入回购单价" @blur="blurPerPrice" disabled style="flex: 1;"/>
                <text>元/克</text>
            </view>
        </view>
        <view class="weui-cell weui-cell_input weui-special">
            <view class="weui-cell__hd">
                <view class="weui-label">金条件数</view>
            </view>
            <view class="weui-cell__bd flex-bd">
                <picker @change="bindCountsChange" value="{{countsIndex}}" range="{{counts}}" style="flex: 1;">
                    <view class="weui-select weui-select_in-select-after">{{counts[countsIndex]}}</view>
                </picker>
                <text>件</text>
            </view>
        </view>
        <view class="weui-cell weui-cell_input">
            <view class="weui-cell__hd">
                <view class="weui-label">总重量</view>
            </view>
            <view class="weui-cell__bd flex-bd">
                <input class="weui-input" type="digit" value="{{weight}}" placeholder="请输入总重量" @blur="blurWeight" disabled style="flex: 1;"/>
                <text>g</text>
            </view>
        </view>
        <view class="weui-cell weui-cell_input">
            <view class="weui-cell__hd">
                <view class="weui-label">回购实物黄金总额</view>
            </view>
            <view class="weui-cell__bd flex-bd">
                <text>￥</text>
                <input class="weui-input" type="digit" value="{{realAmountPrice}}" placeholder="自动计算" disabled @blur="blurAmountPrice"/>
            </view>
        </view>
        <view class="weui-cell weui-cell_select">
            <view class="weui-cell__hd weui-cell__hd_in-select-after">
                <view class="weui-label">回收银行网点</view>
            </view>
            <view class="weui-cell__bd">
                <picker @change="bindBankNetChange" value="{{bankNetIndex}}" range="{{bankNetType}}">
                    <view class="weui-select weui-select_in-select-after">{{bankNetType[bankNetIndex]}}</view>
                </picker>
            </view>
        </view>
        <view class="weui-cell weui-cell_input">
            <view class="weui-cell__hd">
                <view class="weui-label">中收费单价</view>
            </view>
            <view class="weui-cell__bd flex-bd">
                <text>￥</text>
                <input class="weui-input" type="digit" value="{{chargePerPrice}}" placeholder="请输入中收费单价" @blur="blurChargePerPrice" @input="inputChargePerPrice" style="flex: 1;"/>
                <text>元/克</text>
            </view>
        </view>
        <view class="weui-cell weui-cell_input">
            <view class="weui-cell__hd">
                <view class="weui-label">中收费合计金额</view>
            </view>
            <view class="weui-cell__bd flex-bd">
                <text>￥</text>
                <input class="weui-input" type="digit" value="{{chargeAmountPrice}}" @blur="blurChargeAmountPrice" disabled placeholder="自动计算"/>
            </view>
        </view>
        <view class="weui-cell weui-cell_input">
            <view class="weui-cell__hd">
                <view class="weui-label">上传《回购确认书》</view>
            </view>
            <view class="weui-cell__bd">
                <text class="iconfont icon-zhaoxiangji weui-input" @tap="upload" style="color: #C4261D; margin-right: 54rpx; float: right;"></text>
            </view>
        </view>
    </view>
    <view class="weui-flex">
        <text class="iconfont icon-zhaoxiangji" @tap="openCamera" style="color: #C4261D; margin-right: 20rpx;"></text>
        <text @tap="openCamera">拍摄黄金实物</text>
    </view>
    <view class="weui-cells__title">收款账号</view>
    <view class="weui-cells weui-cells_after-title">
        <view class="weui-cell weui-cell_input">
            <view class="weui-cell__hd">
                <view class="weui-label">户名</view>
            </view>
            <view class="weui-cell__bd">
                <input class="weui-input" value="{{payeeName}}" placeholder="收款人姓名" @confirm="confirmPayeeName" @blur="blurPayeeName" @input="inputPayeeName"/>
            </view>
        </view>
        <view class="weui-cell weui-cell_input">
            <view class="weui-cell__hd">
                <view class="weui-label">开户行</view>
            </view>
            <view class="weui-cell__bd">
                <input class="weui-input" value="{{payeeBankName}}" placeholder="请认真填写开户行信息" @confirm="confirmPayeeBankName" @blur="blurPayeeBankName" @input="inputPayeeBankName"/>
            </view>
        </view>
        <view class="weui-cell weui-cell_input">
            <view class="weui-cell__hd">
                <view class="weui-label">卡号</view>
            </view>
            <view class="weui-cell__bd">
                <input class="weui-input" type="number" value="{{payeeBankNo}}" placeholder="收款人储蓄卡号" @blur="blurPayeeBankNo" @input="inputPayeeBankNo"/>
            </view>
        </view>
    </view>
    <view class="weui-flex" style="padding-bottom: 50rpx;">
        <button class="weui-btn authenticate-btn1" type="default" @tap="next">确定</button>
    </view>
  </view>
</template>

<script>
    import wepy from 'wepy';
    import utils from '../../utils/index';

    export default class OrderInput extends wepy.page {
        config = {
            navigationBarTitleText: '回购订单录入'
        };
        data = {
            customerName: '',
            customerId: '',
            date: '',
            time: '',
            perPrice: '',
            // 真实的回购单价，当选择99.99%时要扣0.5元/克
            realPerPrice: '',
            weight: '',
            amountPrice: '',
            // 真实的回购单价，当选择99.99%时要扣0.5元/克
            realAmountPrice: '',
            chargePerPrice: '',
            chargeAmountPrice: '',
            confirmationAddr: '',
            materialAddr: '',
            payeeName: '',
            payeeBankName: '',
            payeeBankNo: '',
            usingCamera: false,
            tempFilePaths: [],

            beginDate: '',
            endDate: '',

            productType: ['99.9%', '99.99%'],
            productIndex: 0,

            bankNetType: [],
            bankNetIndex: 0,

            counts: [1, 2, 3, 4, 5, 6],
            countsIndex: 0,

            // 缓存中的值
            cacheGoldPrice: 0,
            cacheWeight: 0,
            cacheFid: '',
            cacheNetworkBank: {}
        };
        watch = {
            chargePerPrice (val) {
                this.chargeAmountPrice = utils.formatFloat(val, this.weight, 3);
            }
        };
        computed = {
            buybackDate () {
                return `${this.date} ${this.time}:00`;
            },
            realPerPrice () {
                if (this.productIndex === 0) {
                    return 1 * this.perPrice - 0.5;
                }
                return this.perPrice;
            },
            realAmountPrice () {
                return utils.formatFloat(this.realPerPrice, this.weight, 3);
            }
        };
        methods = {
            inputName (e) {
                this.customerName = e.detail.value;
            },
            inputId (e) {
                this.customerId = e.detail.value;
            },
            inputChargePerPrice (e) {
                this.chargePerPrice = '' + e.detail.value;
            },
            inputPayeeName (e) {
                this.payeeName = e.detail.value;
            },
            inputPayeeBankName (e) {
                this.payeeBankName = e.detail.value;
            },
            inputPayeeBankNo (e) {
                this.payeeBankNo = e.detail.value;
            },
            bindDateChange (e) {
                this.date = e.detail.value;
            },
            bindTimeChange (e) {
                this.time = e.detail.value;
            },
            bindProductChange (e) {
                this.productIndex = 1 * e.detail.value;
            },
            bindCountsChange (e) {
                this.countsIndex = e.detail.value;
            },
            bindBankNetChange (e) {
                this.bankNetIndex = e.detail.value;
            },
            blurName (e) {
                this.customerName = e.detail.value;
            },
            confirmName (e) {
                this.customerName = e.detail.value;
            },
            blurId (e) {
                this.customerId = e.detail.value;
                const reg = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/;
                utils.judge(this.customerId, reg, '身份证不合法', () => {
                    this.customerId = '';
                    this.$apply();
                    this.setData({
                        customerId: ''
                    });
                });
            },
            blurPerPrice (e) {
                this.perPrice = '' + e.detail.value;
                const reg = /^[0-9]*(\.[0-9]{1,6})?$/;
                utils.judge(this.perPrice, reg, '回购单价不合法', () => {
                    this.perPrice = '';
                    this.$apply();
                    this.setData({
                        perPrice: ''
                    });
                });
            },
            blurWeight (e) {
                this.weight = '' + e.detail.value;
                const reg = /^[0-9]*(\.[0-9]{1,6})?$/;
                utils.judge(this.weight, reg, '总重量不合法', () => {
                    this.weight = '';
                    this.$apply();
                    this.setData({
                        weight: ''
                    });
                });
            },
            blurAmountPrice (e) {
                this.amountPrice = '' + e.detail.value;
                const reg = /^[0-9]*(\.[0-9]{1,6})?$/;
                utils.judge(this.amountPrice, reg, '回购总额不合法', () => {
                    this.amountPrice = '';
                    this.$apply();
                    this.setData({
                        amountPrice: ''
                    });
                });
            },
            blurChargePerPrice (e) {
                this.chargePerPrice = '' + e.detail.value;
                const reg = /^[0-9]*(\.[0-9]{1,6})?$/;
                utils.judge(this.chargePerPrice, reg, '中收费单价不合法', () => {
                    this.chargePerPrice = '';
                    this.$apply();
                    this.setData({
                        chargePerPrice: ''
                    });
                });
            },
            blurChargeAmountPrice (e) {
                this.chargeAmountPrice = '' + e.detail.value;
                const reg = /^[0-9]*(\.[0-9]{1,6})?$/;
                utils.judge(this.chargeAmountPrice, reg, '中收费总额不合法', () => {
                    this.chargeAmountPrice = '';
                    this.$apply();
                    this.setData({
                        chargeAmountPrice: ''
                    });
                });
            },
            upload () {
                wx.navigateTo({
                    url: 'confirmPic'
                });
            },
            blurPayeeName (e) {
                this.payeeName = e.detail.value;
            },
            confirmPayeeName (e) {
                this.payeeName = e.detail.value;
            },
            blurPayeeBankName (e) {
                this.payeeBankName = e.detail.value;
            },
            confirmPayeeBankName (e) {
                this.payeeBankName = e.detail.value;
            },
            blurPayeeBankNo (e) {
                this.payeeBankNo = e.detail.value;
            },
            openCamera () {
                const self = this;
                this.usingCamera = true;
                wx.chooseImage({
                    count: 1,
                    sizeType: ['compressed'],
                    success: (res) => {
                        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
                        self.tempFilePaths = res.tempFilePaths;
                        self.usingCamera = false;
                        wx.showLoading({
                            title: '正在上传'
                        });
                        wx.uploadFile({
                            url: utils.server_url + '/order/uploadimg',
                            filePath: self.tempFilePaths[0],
                            name: 'file',
                            header: {
                                'token': wx.getStorageSync('session'),
                                'content-type': 'multipart/form-data'
                            },
                            success(res) {
                                wx.hideLoading();
                                const data = JSON.parse(res.data);
                                if (data.code === 500) {
                                    wx.showToast({
                                        title: data.msg,
                                        image: '../../images/warn.png',
                                        duration: 2000
                                    });
                                } else {
                                    let data = JSON.parse(res.data);
                                    wx.showToast({
                                        title: '上传成功',
                                        duration: 2000
                                    });
                                    self.materialAddr = data.fid;
                                    self.$apply();
                                }
                            }
                        });
                    }
                });
            },
            next () {
                if (!utils.beforeSubmit(this.customerName, '姓名不能为空')) return;
                if (!utils.beforeSubmit(this.customerId, '身份证不能为空')) return;
                if (!utils.beforeSubmit(this.buybackDate, '回购日期不能为空')) return;
                if (!utils.beforeSubmit(this.chargePerPrice, '中收费单价不能为空')) return;
                if (!utils.beforeSubmit(this.confirmationAddr, '回购确认书必须拍照')) return;
                if (!utils.beforeSubmit(this.materialAddr, '黄金实物必须拍照')) return;
                if (!utils.beforeSubmit(this.payeeName, '户名不能为空')) return;
                if (!utils.beforeSubmit(this.payeeBankName, '开户行不能为空')) return;
                if (!utils.beforeSubmit(this.payeeBankNo, '卡号不能为空')) return;
                let toSubmitOrder = {};
                toSubmitOrder.name = this.customerName;
                toSubmitOrder.cardNo = this.customerId;
                toSubmitOrder.buybackDate = this.buybackDate;
                toSubmitOrder.type = this.productType[this.productIndex];
                toSubmitOrder.buybackPrice = this.realPerPrice;
                toSubmitOrder.number = this.counts[this.countsIndex];
                toSubmitOrder.totalAmount = this.realAmountPrice;
                toSubmitOrder.totalWeight = this.weight;
                toSubmitOrder.dot = this.bankNetType[this.bankNetIndex];
                this.cacheNetworkBank.forEach(element => {
                    if (this.bankNetType[this.bankNetIndex] === element.name) {
                        toSubmitOrder.dotKey = element.id;
                    }
                });
                toSubmitOrder.inChargePrice = this.chargePerPrice;
                toSubmitOrder.inChargeAmount = this.chargeAmountPrice;
                toSubmitOrder.confirmationAddr = this.confirmationAddr;
                toSubmitOrder.materialImg = this.materialAddr;
                toSubmitOrder.receivablesAccount = this.payeeName;
                toSubmitOrder.openBank = this.payeeBankName;
                toSubmitOrder.cardNumber = this.payeeBankNo;
                wx.setStorageSync('toSubmitOrder', JSON.stringify(toSubmitOrder));
                wx.navigateTo({
                    url: 'confirmOrder'
                });
            }
        };

        judge (data, reg, title, cb) {
            if (data !== '' && !reg.test(data)) {
                wx.showToast({
                    title,
                    image: '../../images/warn.png',
                    duration: 2000
                });
                cb();
            }
        }

        beforeSubmit(data, title) {
            if (!data) {
                wx.showToast({
                    title,
                    image: '../../images/warn.png',
                    duration: 2000
                });
                return false;
            }
            return true;
        }

        onShow() {
            this.cacheGoldPrice = wx.getStorageSync('goldPrice');
            // 回购单价自动获取
            this.perPrice = this.cacheGoldPrice;
            const purchaseOrder = JSON.parse(wx.getStorageSync('purchaseOrder'));
            this.cacheWeight = purchaseOrder.weight;
            // 总重量自动获取
            this.weight = this.cacheWeight;
            // 回购实物黄金总额计算得到
            // this.amountPrice = 1 * this.perPrice * this.weight;
            this.cacheFid = purchaseOrder.fid;
            // 回购确认书fid
            this.confirmationAddr = this.cacheFid;
            this.cacheNetworkBank = JSON.parse(wx.getStorageSync('networkBank'));
            this.cacheNetworkBank.forEach(element => {
                this.bankNetType.push(element.name);
                this.$apply();
            });

            const minutes = (new Date()).getMinutes();
            const hours = (new Date()).getHours();
            const hoursStr = hours >= 10 ? hours : `0${hours}`;
            const minutesStr = minutes >= 10 ? minutes : `0${minutes}`;
            this.time = `${hoursStr}:${minutesStr}`;
        }

        onLoad() {
            this.endDate = utils.formatFunc(new Date());
            this.date = this.endDate;
            const currentYear = (new Date()).getFullYear().toString();
            const currentMonth = (new Date()).getMonth() + 1;
            const mStr = currentMonth.length > 1 ? currentMonth : `0${currentMonth}`;
            const currentDay = (new Date()).getDate().toString();
            const dayStr = currentDay > 1 ? currentDay : `0${currentDay}`;
            const lastYear = 1 * currentYear - 1;
            this.beginDate = `${lastYear}-${mStr}-${dayStr}`;
        }
    }
</script>
